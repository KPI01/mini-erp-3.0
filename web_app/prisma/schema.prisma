generator client {
  provider = "prisma-client-js"
}

generator custom_generator {
  provider = "prisma-generator-fake-data"
  output   = "./fake-data.ts"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// AUTH
model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  name     String
  email    String  @unique
  password String
  activo   Boolean @default(true)
}

// INVENTARIO
model Item {
  id             Int           @id @default(autoincrement())
  descripcion    String
  activo         Boolean       @default(true)
  stockMin       Float?        @default(0)
  stockMax       Float?        @default(0)
  precio         Float?        @default(1)
  ubicacionId    Int?
  ubicacion      Ubicacion?    @relation(fields: [ubicacionId], references: [id])
  stock          Stock[]
  unidadMedidaId Int?
  unidadMedida   UnidadMedida? @relation(fields: [unidadMedidaId], references: [id])
}

model Ubicacion {
  id          Int         @id @default(autoincrement())
  descripcion String
  corto       String      @unique
  isAlmacen   Boolean     @default(false)
  ubicacionId Int?
  item        Item[]
  seccion     Ubicacion?  @relation("locacion", fields: [ubicacionId], references: [id])
  almacen     Ubicacion[] @relation("locacion")
}

model Stock {
  id          Int      @id @default(autoincrement())
  fecha       DateTime @default(now())
  descripcion String
  cant        Int
  itemId      Int
  item        Item     @relation(fields: [itemId], references: [id])
}

model UnidadMedida {
  id          Int    @id @default(autoincrement())
  descripcion String
  corto       String @unique
  Item        Item[]
}
